__END__
require 'rubygems'


unless IRB.version.include?('DietRB')
  IRB::Irb.class_eval do
    def output_value
      ap @context.last_value
    end
  end
else # MacRuby
  IRB.formatter = Class.new(IRB::Formatter) do
    def inspect_object(object)
      object.ai
    end
  end.new
end

begin
  #require "awesome_print"

  # load wirble
  require 'wirble'
  # start wirble (with color)
  Wirble.init
  Wirble.colorize


  # Load hirb
  require 'hirb'

  Hirb::View.enable

rescue LoadError => e
  # be silent
  warn "Couldn't load: #{e}"
end


# Tell IRB to save 2000 lines of history
IRB.conf[:SAVE_HISTORY] = 2000

# Set up a better prompt

# This prompt includes some color, and enables auto-indent
# prompt_prefix = "\n\033[1;32m%T\033[m(%N)\033[1;35m %m#{$rails_root}\n\033[1;31m%03n:%i" #+`__git_ps1`
# That one doesn't work that well with IRB currently, so use a simpler one:
prompt_prefix = "#{$rails_root} %03n:%i"

IRB.conf[:PROMPT][:MY_PROMPT] = {
  :PROMPT_I => "#{prompt_prefix} > ",
  :PROMPT_N => "#{prompt_prefix} > ",
  :PROMPT_S => "#{prompt_prefix} %l ",
  :PROMPT_C => "#{prompt_prefix} * ",
  :RETURN => " #=> %s\n",
  :AUTO_INDENT => true
}
# # Tell IRB to use mine
IRB.conf[:PROMPT_MODE] = :MY_PROMPT
