if defined?(::Bundler) and ENV['GEM_PATH']
  class Bundler::SideLoader
    def initialize
      @gem_dirs_pattern = "{#{ENV['GEM_PATH'].split(':').join(?,)}}/gems"
      unless Dir.glob(@gem_dirs_pattern).length > 0
        $stderr.puts "WARN: No gem dirs found for bypassing bundler (in #{__FILE__})"
      end
    end

    def require gem_name
      gem_regexp = %r!/#{gem_name}-[\d.]+/lib\z!
      libs = Dir.glob(File.join(@gem_dirs_pattern, "#{gem_name}-*/lib")).grep(gem_regexp) # extra grep is to match only different versions of named gem, instead of matching 'pry-remote' when 'pry' was given
      raise "Gem #{gem_name} not found" unless libs.length > 0
      unless $LOAD_PATH.grep(gem_regexp).length > 0
        $LOAD_PATH.push libs.sort.last # greatest version
      end
      ::Kernel.require gem_name
    end
  end

  gems_to_sideload = %w[
    pry
    pry-doc
    pry-remote
    pry-debugger
    binding_of_caller
    pry-stack_explorer
  ]
  sideloader = Bundler::SideLoader.new

  $stderr.print "[irbrc] Side-loading gems: "
  gems_to_sideload.each do |gem_name|
    $stderr.print "#{gem_name} "
    sideloader.require gem_name
  end
  $stderr.print "\n"
end
